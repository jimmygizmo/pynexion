[supervisord]
nodaemon=true

[program:app]
directory=/var/www/service
command=python ./app.py

# Restart app even if it stops without any error (status 0.)
# If this is false, supervisor will still restart the app if it exits with an error (status non-zero.)
autorestart=true

stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
redirect_stderr=true


# General notes:

# If a program changes the user, for example in the way Apache uses nobody for child worker processes even when
# started as root, then you will need to use the following options for such programs in order for supervisor
# to be able to kill or stop the child processes running as the different user:
#killasgroup=true
#stopasgroup=true
# When the case is Apache running in this manner, be sure to run with the -DFOREGROUND option. Such as:
#command=apache2ctl -DFOREGROUND

# A good article on configuring this file for Docker usage:
# https://advancedweb.hu/supervisor-with-docker-lessons-learned/

# Supervisor is outputting a warning with a suggestion for improved security by being explicit about the location
# of the config file:
# TODO: Consider implementing this suggestion:
#
# ^C2020-07-24 03:59:37,603 WARN received SIGINT indicating exit request
# /usr/lib/python3/dist-packages/supervisor/options.py:470: UserWarning: Supervisord is running as root and
# it is searching for its configuration file in default locations (including its current working directory);
# you probably want to specify a "-c" argument specifying an absolute path to a configuration file for improved security.
#   self.warnings.warn(


##
#

